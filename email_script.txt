pipeline {    agent any    environment {        EMAIL_RECIPIENT = 'your-email@example.com'    }    stages {        stage('Build') {            steps {                echo 'Building the application...'                // Example using Maven                sh 'mvn clean package'            }        }                stage('Unit and Integration Tests') {            steps {                echo 'Running Unit and Integration Tests...'                // Example using a testing tool like JUnit                sh 'mvn test'            }            post {                always {                    mail to: "${env.EMAIL_RECIPIENT}",                         subject: "Unit and Integration Test Stage: ${currentBuild.currentResult}",                         body: "The Unit and Integration Test stage has ${currentBuild.currentResult}. Please find the attached logs.",                         attachmentsPattern: '**/target/surefire-reports/*.xml'                }            }        }                stage('Code Analysis') {            steps {                echo 'Analyzing the code...'                // Example using a tool like SonarQube                sh 'mvn sonar:sonar'            }        }                stage('Security Scan') {            steps {                echo 'Performing security scan...'                // Example using a tool like OWASP Dependency-Check                sh 'dependency-check.sh --project my-app --scan .'            }            post {                always {                    mail to: "${env.EMAIL_RECIPIENT}",                         subject: "Security Scan Stage: ${currentBuild.currentResult}",                         body: "The Security Scan stage has ${currentBuild.currentResult}. Please find the attached logs.",                         attachmentsPattern: '**/dependency-check-report.xml'                }            }        }                stage('Deploy to Staging') {            steps {                echo 'Deploying to Staging...'                // Example deployment command to AWS EC2 instance                sh 'scp -i my-key.pem target/my-app.jar ec2-user@staging-server:/apps/my-app/'            }        }                stage('Integration Tests on Staging') {            steps {                echo 'Running integration tests on staging...'                // Example command for running tests on staging                sh 'curl -X GET http://staging-server:8080/test'            }        }                stage('Deploy to Production') {            steps {                echo 'Deploying to Production...'                // Example deployment command to AWS EC2 instance                sh 'scp -i my-key.pem target/my-app.jar ec2-user@production-server:/apps/my-app/'            }        }    }        post {        success {            echo 'Pipeline completed successfully!'        }        failure {            echo 'Pipeline failed!'        }        always {            cleanWs() // Clean workspace after the build        }    }}